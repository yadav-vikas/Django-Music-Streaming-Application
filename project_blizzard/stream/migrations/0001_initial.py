# Generated by Django 4.1 on 2022-09-15 19:46

import datetime
from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import stream.models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Album',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('album_name', models.CharField(max_length=250)),
                ('slug', models.SlugField(blank=True, max_length=255, null=True, unique=True)),
                ('album_description', models.TextField(blank=True, null=True)),
                ('album_release_year', models.IntegerField(default=2022, help_text='year', validators=[django.core.validators.MinValueValidator(1984), stream.models.max_value_current_year])),
                ('album_thumbnail', models.ImageField(blank=True, default='default.jpg', null=True, upload_to='album')),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('updated_at', models.DateTimeField(auto_now=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Genre',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('genre_name', models.CharField(max_length=250)),
                ('slug', models.SlugField(blank=True, max_length=255, null=True, unique=True)),
                ('genre_description', models.TextField(blank=True, null=True)),
                ('genre_thumbnail', models.ImageField(blank=True, default='default.jpg', null=True, upload_to='genre')),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('updated_at', models.DateTimeField(auto_now=True, null=True)),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='genre_created_user', related_query_name='genre_created_user', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Mood',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('mood_name', models.CharField(max_length=250)),
                ('slug', models.SlugField(blank=True, max_length=255, null=True, unique=True)),
                ('mood_description', models.TextField(blank=True, null=True)),
                ('mood_thumbnail', models.ImageField(blank=True, default='default.jpg', null=True, upload_to='mood')),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('updated_at', models.DateTimeField(auto_now=True, null=True)),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='mood_created_user', related_query_name='mood_created_user', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Playlist',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('playlist_name', models.CharField(max_length=220)),
                ('slug', models.SlugField(blank=True, max_length=255, null=True, unique=True)),
                ('playlist_thumbnail', models.ImageField(blank=True, default='default.jpg', null=True, upload_to='playlist')),
                ('playlist_public_or_private', models.BooleanField(default=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('updated_at', models.DateTimeField(auto_now=True, null=True)),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='playlist_created_user', related_query_name='playlist_created_user', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Subscriptions',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('subscribers', models.ManyToManyField(blank=True, related_name='subscriptions', to=settings.AUTH_USER_MODEL)),
                ('user_channel', models.OneToOneField(help_text='user_subscription', on_delete=django.db.models.deletion.CASCADE, related_name='user_subscription', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Song',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('song_name', models.CharField(max_length=250)),
                ('slug', models.SlugField(blank=True, max_length=255, null=True, unique=True)),
                ('song_thumbnail', models.ImageField(blank=True, default='default.jpg', null=True, upload_to='song/image/')),
                ('song_duration', models.DurationField(blank=True, default=datetime.timedelta(0))),
                ('song_file', models.FileField(upload_to='song/file/')),
                ('song_lyrics', models.FileField(blank=True, null=True, upload_to='song/lyrics/')),
                ('song_label', models.CharField(blank=True, max_length=100, null=True)),
                ('song_likes', models.PositiveBigIntegerField(blank=True, default=0, null=True)),
                ('song_dislikes', models.PositiveBigIntegerField(blank=True, default=0, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('updated_at', models.DateTimeField(auto_now=True, null=True)),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='song_created_user', related_query_name='song_created_user', to=settings.AUTH_USER_MODEL)),
                ('song_user', models.ManyToManyField(related_name='song_user', to=settings.AUTH_USER_MODEL)),
                ('updated_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='song_updated_user', related_query_name='song_updated_user', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='ReleasedPlaylist',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('playlist', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='stream.playlist')),
                ('song', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='stream.song')),
            ],
        ),
        migrations.CreateModel(
            name='ReleasedMood',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('mood', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='stream.mood')),
                ('song', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='stream.song')),
            ],
        ),
        migrations.CreateModel(
            name='ReleasedGenre',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('genre', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='stream.genre')),
                ('song', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='stream.song')),
            ],
        ),
        migrations.CreateModel(
            name='ReleasedAlbum',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('album', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='stream.album')),
                ('song', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='stream.song')),
            ],
            options={
                'unique_together': {('album', 'song')},
            },
        ),
        migrations.AddField(
            model_name='playlist',
            name='song',
            field=models.ManyToManyField(related_name='playlist_song', through='stream.ReleasedPlaylist', to='stream.song'),
        ),
        migrations.AddField(
            model_name='playlist',
            name='updated_by',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='playlist_updated_user', related_query_name='playlist_updated_user', to=settings.AUTH_USER_MODEL),
        ),
        migrations.CreateModel(
            name='MoodPlaylist',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('mood', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='stream.mood')),
                ('playlist', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='stream.playlist')),
            ],
        ),
        migrations.AddField(
            model_name='mood',
            name='song',
            field=models.ManyToManyField(related_name='mood_song', through='stream.ReleasedMood', to='stream.song'),
        ),
        migrations.AddField(
            model_name='mood',
            name='updated_by',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='mood_updated_user', related_query_name='mood_updated_user', to=settings.AUTH_USER_MODEL),
        ),
        migrations.CreateModel(
            name='GenrePlaylist',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('genre', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='stream.genre')),
                ('playlist', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='stream.playlist')),
            ],
        ),
        migrations.AddField(
            model_name='genre',
            name='song',
            field=models.ManyToManyField(related_name='genre_song', through='stream.ReleasedGenre', to='stream.song'),
        ),
        migrations.AddField(
            model_name='genre',
            name='updated_by',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='genre_updated_user', related_query_name='genre_updated_user', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='album',
            name='album_song',
            field=models.ManyToManyField(related_name='album_song', through='stream.ReleasedAlbum', to='stream.song'),
        ),
        migrations.AddField(
            model_name='album',
            name='album_user',
            field=models.ManyToManyField(related_name='album_user', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='album',
            name='created_by',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='album_creator', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='album',
            name='updated_by',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='album_updated_user', related_query_name='album_updated_user', to=settings.AUTH_USER_MODEL),
        ),
    ]
